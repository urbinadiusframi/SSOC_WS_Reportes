<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>co.gov.ssoc.gedess.sgd</groupId>
	<artifactId>SSOC_SPRING_MICROSERVICES</artifactId>
	<name>${project.artifactId}</name>
	<packaging>pom</packaging>
	<version>1.0.0</version>
	<modules>
		<!--		<module>spring-dacartec-admin-server</module>-->
		<!--		<module>spring-dacartec-customers-service</module>-->
		<!--		<module>spring-dacartec-vets-service</module>-->
		<!--		<module>SSOC_SPRING_Tests</module>-->
		<module>SSOC_SPRING_Cfg</module>
		<module>SSOC_DB_Model</module>
		 <module>SSOC_WS_Integraciones</module> 
<!--		<module>SSOC_OPE_Administracion_Tramites</module>-->
<!--				<module>SSOC_WS_Auditoria</module>-->
<!--		<module>SSOC_WS_Administracion_Instrumentos_Archivisticos</module>-->
		<!--		<module>spring-dacartec-config-server</module>-->
		<!--		<module>spring-dacartec-discovery-server</module>-->
		<!--		<module>spring-dacartec-api-gateway</module>-->
	</modules>
	<properties>
		<java.version>1.8</java.version>
		<assertj.version>3.17.1</assertj.version>
		<!--        <spring-cloud.version>2022.0.1</spring-cloud.version>-->
		<spring-cloud.version>2021.0.5</spring-cloud.version>
		<!--        <spring-cloud.version>2021.0.7</spring-cloud.version>-->
		<chaos-monkey-spring-boot.version>2.3.10</chaos-monkey-spring-boot.version>
		<jolokia-core.version>1.7.1</jolokia-core.version>
		<docker.image.prefix>springcommunity</docker.image.prefix>
		<docker.image.exposed.port>9090</docker.image.exposed.port>
		<docker.image.dockerfile.dir>${basedir}</docker.image.dockerfile.dir>
		<docker.image.dockerize.version>v0.6.1</docker.image.dockerize.version>
		<docker.plugin.version>1.2.0</docker.plugin.version>
		<spring.version>2.7.6</spring.version>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
	</properties>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>de.codecentric</groupId>
				<artifactId>chaos-monkey-spring-boot</artifactId>
				<version>${chaos-monkey-spring-boot.version}</version>
			</dependency>
			<dependency>
				<groupId>org.jolokia</groupId>
				<artifactId>jolokia-core</artifactId>
				<version>${jolokia-core.version}</version>
			</dependency>
			<dependency>
				<groupId>org.assertj</groupId>
				<artifactId>assertj-core</artifactId>
				<version>${assertj.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>io.springfox</groupId>
				<artifactId>springfox-swagger2</artifactId>
				<version>2.9.2</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>io.springfox</groupId>
				<artifactId>springfox-swagger-ui</artifactId>
				<version>2.9.2</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<profiles>
		<profile>
			<id>springboot</id>
			<activation>
				<file>
					<!-- Just a way to identify a Spring Boot application -->
					<exists>src/main/resources/application.yml</exists>
				</file>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-resources-plugin</artifactId>
						<version>3.1.0</version>
					</plugin>
					<plugin>
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-maven-plugin</artifactId>
						<executions>
							<execution>
								<!-- Spring Boot Actuator displays build-related information if a META-INF/build-info.properties file is present -->
								<goals>
									<goal>build-info</goal>
								</goals>
								<configuration>
									<additionalProperties>
										<encoding.source>${project.build.sourceEncoding}</encoding.source>
										<encoding.reporting>${project.reporting.outputEncoding}</encoding.reporting>
										<java.source>${maven.compiler.source}</java.source>
										<java.target>${maven.compiler.target}</java.target>
									</additionalProperties>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<!-- Spring Boot Actuator displays build-related information if a META-INF/build-info.properties file is present -->
					<plugin>
						<groupId>io.github.git-commit-id</groupId>
						<artifactId>git-commit-id-maven-plugin</artifactId>
						<executions>
							<execution>
								<goals>
									<goal>revision</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<verbose>true</verbose>
							<dateFormat>yyyy-MM-dd'T'HH:mm:ssZ</dateFormat>
							<generateGitPropertiesFile>true</generateGitPropertiesFile>
							<generateGitPropertiesFilename>${project.build.outputDirectory}/git.properties</generateGitPropertiesFilename>
							<failOnNoGitDirectory>false</failOnNoGitDirectory>
							<failOnUnableToExtractRepoInfo>false</failOnUnableToExtractRepoInfo>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>buildDocker</id>
			<build>
				<pluginManagement>
					<plugins>
						<plugin>
							<groupId>com.spotify</groupId>
							<artifactId>docker-maven-plugin</artifactId>
							<version>${docker.plugin.version}</version>
							<executions>
								<execution>
									<phase>install</phase>
									<goals>
										<goal>build</goal>
									</goals>
								</execution>
							</executions>
							<configuration>
								<imageName>${docker.image.prefix}/${project.artifactId}</imageName>
								<dockerDirectory>${docker.image.dockerfile.dir}</dockerDirectory>
								<serverId>docker-hub</serverId>
								<registryUrl>https://index.docker.io/v1/</registryUrl>
								<resources>
									<resource>
										<targetPath>/</targetPath>
										<directory>${project.build.directory}</directory>
										<include>${project.build.finalName}.jar</include>
									</resource>
								</resources>
								<buildArgs>
									<ARTIFACT_NAME>${project.build.finalName}</ARTIFACT_NAME>
									<EXPOSED_PORT>${docker.image.exposed.port}</EXPOSED_PORT>
									<DOCKERIZE_VERSION>${docker.image.dockerize.version}</DOCKERIZE_VERSION>
								</buildArgs>
							</configuration>
						</plugin>
					</plugins>
				</pluginManagement>
			</build>
		</profile>
	</profiles>
</project>

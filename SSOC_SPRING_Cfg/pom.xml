<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>co.gov.ssoc.gedess.sgd.cfg</groupId>
	<artifactId>SSOC_SPRING_Cfg</artifactId>
	<packaging>jar</packaging>
	<description>Spring Microservices Configuration</description>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.7.6</version>
		<relativePath />
	</parent>
	<properties>
		<docker.exposed.port>8081</docker.exposed.port>
		<docker.image.dockerfile.dir>${basedir}/../docker</docker.image.dockerfile.dir>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.apache.tomcat.embed</groupId>
					<artifactId>tomcat-embed-websocket</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web-services</artifactId>
		</dependency>
		<dependency>
			<groupId>co.gov.ssoc.gedess.sgd.model</groupId>
			<artifactId>SSOC_DB_Model</artifactId>
			<version>2.7.6</version>
		</dependency>
		<!--		<dependency>-->
		<!--			<groupId>org.javers</groupId>-->
		<!--			<artifactId>javers-spring-boot-starter-sql</artifactId>-->
		<!--			<version>6.6.5</version>-->
		<!--		</dependency>-->
		<dependency>
			<groupId>com.microsoft.sqlserver</groupId>
			<artifactId>mssql-jdbc</artifactId>
		</dependency>
		<!-- Spring Boot -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
			<version>3.1.6</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- Spring Cloud -->
		<!-- Third parties -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<scope>provided</scope>
		</dependency>
		<!-- Testing -->
		<dependency>
			<groupId>org.junit.platform</groupId>
			<artifactId>junit-platform-suite-engine</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- metrics -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-registry-prometheus</artifactId>
		</dependency>
		<dependency>
			<groupId>io.opentelemetry</groupId>
			<artifactId>opentelemetry-exporter-zipkin</artifactId>
			<version>1.27.0</version>
		</dependency>
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt</artifactId>
			<version>0.9.1</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>2.9.2</version>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
			<version>2.9.2</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.kafka</groupId>
			<artifactId>spring-kafka</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.11.0</version>
		</dependency>
		<dependency>
			<groupId>org.bouncycastle</groupId>
			<artifactId>bcprov-jdk15on</artifactId>
			<version>1.69</version>
		</dependency>
		<dependency>
			<groupId>org.wildfly.security</groupId>
			<artifactId>wildfly-elytron</artifactId>
			<version>2.2.1.Final</version>
		</dependency>
		<dependency>
			<groupId>org.jboss.logging</groupId>
			<artifactId>jboss-logging</artifactId>
			<version>3.5.3.Final</version>
		</dependency>
		<!--		<dependency>-->
		<!--			<groupId>io.debezium</groupId>-->
		<!--			<artifactId>debezium-api</artifactId>-->
		<!--			<version>1.4.2.Final</version>-->
		<!--		</dependency>-->
		<!--		<dependency>-->
		<!--			<groupId>io.debezium</groupId>-->
		<!--			<artifactId>debezium-embedded</artifactId>-->
		<!--			<version>1.4.2.Final</version>-->
		<!--		</dependency>-->
		<!--		<dependency>-->
		<!--			<groupId>io.debezium</groupId>-->
		<!--			<artifactId>debezium-connector-sqlserver</artifactId>-->
		<!--			<version>1.4.2.Final</version>-->
		<!--		</dependency>-->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.12.0</version>
		</dependency>
		<dependency>
			<groupId>org.modelmapper</groupId>
			<artifactId>modelmapper</artifactId>
			<version>2.4.5</version>
		</dependency>
	</dependencies>
	<profiles>
		<profile>
			<id>buildDocker</id>
			<build>
				<plugins>
					<plugin>
						<groupId>com.spotify</groupId>
						<artifactId>docker-maven-plugin</artifactId>
						<version>${docker.plugin.version}</version>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<includes>
					<include>*.yml</include>
					<include>*.properties</include>
				</includes>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<systemPropertyVariables>
						<mainClass>co.gov.ssoc.gedess.sgd.MainSSOCApplication</mainClass>
					</systemPropertyVariables>
					<forkCount>3</forkCount>
					<reuseForks>true</reuseForks>
					<includes>
						<include>com/dacartec/ssoc/testing/GeneralTestCdencia.java</include>
					</includes>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.junit.jupiter</groupId>
						<artifactId>junit-jupiter-engine</artifactId>
						<version>${junit-jupiter.version}</version>
					</dependency>
					<dependency>
						<groupId>org.junit.vintage</groupId>
						<artifactId>junit-vintage-engine</artifactId>
						<version>${junit-jupiter.version}</version>
					</dependency>
				</dependencies>
			</plugin>
		</plugins>
	</build>
</project>
